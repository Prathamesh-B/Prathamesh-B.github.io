{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/Skills/Skills.js","components/Tools/Tools.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeName","setThemeName","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","Provider","value","toggleTheme","name","localStorage","setItem","header","about","projects","description","tag","sourceCode","livePreview","image","skills","icon","tools","contact","Navbar","useContext","showNavList","setShowNavList","toggleNavList","document","querySelector","style","overflowY","className","display","length","href","onClick","type","aria-label","Header","homepage","title","fontFamily","About","resume","ProjectContainer","project","alt","src","map","item","uniqid","target","rel","Projects","bottom","duration","id","Skills","skill","Tools","tool","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","Contact","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","render","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3ea0449f.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)')\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName(e.matches ? 'dark' : 'light')\n    })\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }\n","const header = {\n  // all the properties are optional - can be left empty or deleted\n  homepage: 'https://prathamesh-b.github.io/',\n  title: 'Pb',\n}\n\nconst about = {\n  // all the properties are optional - can be left empty or deleted\n  name: 'Prathamesh Bhalekar',\n  description:\n    'I enjoy writing code, learning new technology, making new projects.',\n  resume: 'https://example.com',\n}\n\nconst projects = [\n  {\n    name: 'chess-stats-readme',\n    description:\n      'GitHub Action allows you to add chess.com ratings to your README file.',\n    tag: ['Python', 'Github-Action', 'Docker'],\n    sourceCode: 'https://github.com/Prathamesh-B/chess-stats-readme',\n    livePreview: 'https://github.com/Prathamesh-B/',\n    image: 'img/chess.webp',\n  },\n  {\n    name: 'inford',\n    description: 'inford is a python library for sending discord webhooks.',\n    tag: ['Python', 'Discord', 'Webhook'],\n    sourceCode: 'https://github.com/Prathamesh-B/inford',\n    livePreview: 'https://pypi.org/project/inford/',\n    image: 'img/inford.webp',\n  },\n]\n\nconst skills = [\n  {\n    name: 'Python',\n    icon: 'devicon-python-plain',\n  },\n  {\n    name: 'React',\n    icon: 'devicon-react-plain',\n  },\n  {\n    name: 'JavaScript',\n    icon: 'devicon-javascript-plain',\n  },\n  {\n    name: 'HTML',\n    icon: 'devicon-html5-plain',\n  },\n  {\n    name: 'CSS',\n    icon: 'devicon-css3-plain',\n  },\n  {\n    name: 'TypeScript',\n    icon: 'devicon-typescript-plain',\n  },\n  {\n    name: 'Flask',\n    icon: 'devicon-flask-plain',\n  },\n  {\n    name: 'C++',\n    icon: 'devicon-cplusplus-plain',\n  },\n]\n\nconst tools = [\n  {\n    name: 'Git',\n    icon: 'devicon-git-plain',\n  },\n  {\n    name: 'VS Code',\n    icon: 'devicon-vscode-plain',\n  },\n  {\n    name: 'MySQL',\n    icon: 'devicon-mysql-plain',\n  },\n  {\n    name: 'Photoshop',\n    icon: 'devicon-photoshop-plain',\n  },\n  {\n    name: 'Linux',\n    icon: 'devicon-linux-plain',\n  },\n  {\n    name: 'Node',\n    icon: 'devicon-nodejs-plain',\n  },\n  {\n    name: 'Docker',\n    icon: 'devicon-docker-plain',\n  },\n  {\n    name: 'MongoDB',\n    icon: 'devicon-mongodb-plain',\n  },\n]\n\nconst contact = {\n  email: 'prathameshb1704@gmail.com',\n}\n\nexport { header, about, projects, skills, tools, contact }\n","import { useContext, useEffect, useState } from 'react'\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { ThemeContext } from '../../contexts/theme'\nimport { projects, skills, tools, contact } from '../../portfolio'\nimport './Navbar.css'\n\nconst Navbar = () => {\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\n  const [showNavList, setShowNavList] = useState(false)\n  const toggleNavList = () => setShowNavList(!showNavList)\n\n  useEffect(() => {\n    if(showNavList) {\n        document.querySelector('body').style.overflowY = 'hidden';\n    } else {\n        document.querySelector('body').style.overflowY = 'auto';\n    }\n  }, [showNavList])\n  \n  return (\n    <nav className='center nav'>\n      <ul\n        style={{ display: showNavList ? 'flex' : null }}\n        className='nav__list'\n      >\n        {projects.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#projects'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Projects\n            </a>\n          </li>\n        ) : null}\n\n        {skills.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#skills'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Skills\n            </a>\n          </li>\n        ) : null}\n\n        {tools.length ? (\n          <li className='nav__list-item'>\n            <a href='#tools' onClick={toggleNavList} className='link link--nav'>\n              Tools\n            </a>\n          </li>\n        ) : null}\n\n        {contact.email ? (\n          <li className='nav__list-item'>\n            <a\n              href='#contact'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Contact\n            </a>\n          </li>\n        ) : null}\n      </ul>\n\n      <button\n        type='button'\n        onClick={toggleTheme}\n        className='btn btn--icon nav__theme noSelect'\n        aria-label='toggle theme'\n      >\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\n      </button>\n\n      <button\n        type='button'\n        onClick={toggleNavList}\n        className='btn btn--icon nav__hamburger noSelect'\n        aria-label='toggle navigation'\n      >\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\n      </button>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { header } from '../../portfolio'\nimport Navbar from '../Navbar/Navbar'\nimport './Header.css'\n\nconst Header = () => {\n  const { homepage, title } = header\n\n  return (\n    <header className='header center'>\n      <h3>\n        {homepage ? (\n          <a href={homepage} className='link noSelect' style={{ fontFamily: 'Mohave' }}>\n            {title}\n          </a>\n        ) : (\n          title\n        )}\n      </h3>\n      <Navbar />\n    </header>\n  )\n}\n\nexport default Header\n","import { about } from '../../portfolio'\nimport './About.css'\n\nconst About = () => {\n  const { name, description, resume } = about\n\n  return (\n    <div className='about center'>\n      {name && (\n        <h1>\n          Hi, I am <br />\n          <span className='about__name'>{name}.</span>\n        </h1>\n      )}\n      <p className='about__desc'>\n        {description && description}{' '}\n        {resume && (\n          <a href={resume} className='noSelect'>\n            <span type='button' className='btn btn--outline resume-btn'>\n              Resume\n            </span>\n          </a>\n        )}\n      </p>\n    </div>\n  )\n}\n\nexport default About\n","import uniqid from 'uniqid'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport './ProjectContainer.css'\n\nconst ProjectContainer = ({ project }) => (\n  <div className='project'>\n    <img alt='Project Img' src={project.image} />\n    <h3>{project.name}</h3>\n    <p className='project__description'>{project.description}</p>\n    {project.tag && (\n      <ul className='project__tag'>\n        {project.tag.map((item) => (\n          <li key={uniqid()} className='project__tag-item'>\n            {item}\n          </li>\n        ))}\n      </ul>\n    )}\n\n    {project.sourceCode && (\n      <a\n        title='Source Code'\n        target='_blank'\n        rel='noreferrer'\n        href={project.sourceCode}\n        aria-label='source code'\n        className='link link--icon noSelect'\n      >\n        <GitHubIcon />\n      </a>\n    )}\n\n    {project.livePreview && (\n      <a\n        title='Preview'\n        target='_blank'\n        rel='noreferrer'\n        href={project.livePreview}\n        aria-label='live preview'\n        className='link link--icon noSelect'\n      >\n        <LaunchIcon />\n      </a>\n    )}\n  </div>\n)\n\nexport default ProjectContainer\n","import Fade from 'react-reveal/Fade'\nimport uniqid from 'uniqid'\nimport { projects } from '../../portfolio'\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\nimport './Projects.css'\n\nconst Projects = () => {\n  if (!projects.length) return null\n\n  return (\n    <Fade bottom duration={2000}>\n      <section id='projects' className='section projects'>\n        <h2 className='section__title'>Projects</h2>\n\n        <div className='projects__grid'>\n          {projects.map((project) => (\n            <ProjectContainer key={uniqid()} project={project} />\n          ))}\n        </div>\n      </section>\n    </Fade>\n  )\n}\n\nexport default Projects\n","import Fade from 'react-reveal/Fade'\nimport uniqid from 'uniqid'\nimport { skills } from '../../portfolio'\nimport './Skills.css'\n\nconst Skills = () => {\n  if (!skills.length) return null\n\n  return (\n    <Fade>\n      <section className='section skills' id='skills'>\n        <h2 className='section__title'>Skills</h2>\n        <ul className='skills__list'>\n          {skills.map((skill) => (\n            <li key={uniqid()} className='skills__list-item btn btn--plain'>\n              <i className={`mr2 ${skill.icon}`} />\n              {skill.name}\n            </li>\n          ))}\n        </ul>\n      </section>\n    </Fade>\n  )\n}\n\nexport default Skills\n","import Fade from 'react-reveal/Fade'\nimport uniqid from 'uniqid'\nimport { tools } from '../../portfolio'\nimport './Tools.css'\n\nconst Tools = () => {\n  if (!tools.length) return null\n\n  return (\n    <Fade>\n      <section className='section skills' id='tools'>\n        <h2 className='section__title'>Tools</h2>\n        <ul className='skills__list'>\n          {tools.map((tool) => (\n            <li key={uniqid()} className='skills__list-item btn btn--plain'>\n              <i className={`mr2 ${tool.icon}`} />\n              {tool.name}\n            </li>\n          ))}\n        </ul>\n      </section>\n    </Fade>\n  )\n}\n\nexport default Tools\n","import React, { useEffect, useState } from 'react'\nimport './ScrollToTop.css'\n\nconst ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const toggleVisibility = () =>\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n  return isVisible ? (\n    <div className='scroll-top'>\n      <a href='#top' className='hvr-bob '>\n        <i className='fas fa-arrow-up fa-2x' />\n      </a>\n    </div>\n  ) : null\n}\n\nexport default ScrollToTop\n","import Fade from 'react-reveal/Fade'\nimport { contact } from '../../portfolio'\nimport './Contact.css'\n\nconst Contact = () => {\n  if (!contact.email) return null\n  return (\n    <Fade>\n      <section className='section contact center' id='contact'>\n        <h2 className='section__title'>Contact</h2>\n        <div className='cont-btn'>\n          <a\n            className='btn-contact outline hvr-buzz-out fa-mail mr5 noSelect'\n            href={`mailto:${contact.email}`}\n          >\n            <i className='mr2 fas fa-envelope' />\n            Mail\n          </a>\n          <a\n            className='btn-contact hvr-buzz-out outline mr5 noSelect'\n            href='https://github.com/Prathamesh-B'\n            target='_blank'\n            rel='noreferrer'\n          >\n            <i className='mr2 fab fa-github' />\n            GitHub\n          </a>\n          <a\n            className='btn-contact hvr-buzz-out outline mr5 noSelect'\n            href='https://www.linkedin.com/'\n            target='_blank'\n            rel='noreferrer'\n          >\n            <i className='mr2 fab fa-linkedin' />\n            Linkedin\n          </a>\n        </div>\n      </section>\n    </Fade>\n  )\n}\n\nexport default Contact\n","import { useContext } from 'react'\nimport { ThemeContext } from './contexts/theme'\nimport Header from './components/Header/Header'\nimport About from './components/About/About'\nimport Projects from './components/Projects/Projects'\nimport Skills from './components/Skills/Skills'\nimport Tools from './components/Tools/Tools'\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\nimport Contact from './components/Contact/Contact'\nimport './App.css'\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n\n  return (\n    <div id='top' className={`${themeName} app`}>\n      <Header />\n      <main>\n        <About />\n        <Projects />\n        <div className='SandT'>\n          <Skills />\n          <Tools />\n        </div>\n        <Contact />\n      </main>\n      <ScrollToTop />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line no-use-before-define\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line no-use-before-define\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { render } from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from './contexts/theme'\nimport './index.css'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register()\n"],"sourceRoot":""}